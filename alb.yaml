AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an Application Load Balancer (ALB) with two EC2 instances backend.

Parameters:
  PublicSubnet1:
    Description: Public Subnet 1
    Type: String

  PublicSubnet2:
    Description: Public Subnet 2
    Type: String

  EC2InstanceSecurityGroup:
    Description: Security Group ID for EC2 Instances
    Type: String

  MyVPCID:
    Description: VPC ID
    Type: String

  EC2Instance1:
    Description: EC2 Instance 1 ID
    Type: String

  EC2Instance2:
    Description: EC2 Instance 2 ID
    Type: String

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyApplicationLoadBalancer
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups: # Using the Security Group IDs parameter
        - !Ref EC2InstanceSecurityGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref MyVPCID
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Targets:
        - Id: !Ref EC2Instance1
        - Id: !Ref EC2Instance2

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNSName:
    Description: The DNS name of the ALB.
    Value: !GetAtt LoadBalancer.DNSName
  TargetGroupARN:
    Description: The Target Group ARN
    Value: !Ref TargetGroup
    Export:
      Name: "TargetGroupARN"
